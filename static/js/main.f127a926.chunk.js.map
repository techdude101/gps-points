{"version":3,"sources":["components/Header.jsx","components/Todo.jsx","components/Todos.jsx","components/GpsInfo.jsx","components/TodoList.jsx","App.js","index.js"],"names":["Header","text","className","Todo","id","complete","todos","setTodos","setComplete","updatedTodos","map","task","onClick","icon","faCheckCircle","faTrash","remainingTodos","filter","todo","Todos","this","props","style","listStyle","padding","width","remove","removeTodo","React","Component","GpsInfo","useState","position","setPosition","error","setError","handleError","err","console","warn","code","message","handleSuccess","pos","log","coords","useEffect","navigator","geolocation","watchPosition","enableHighAccuracy","timeout","maximumAge","addPoint","e","add","nanoid","latitude","longitude","bind","TodoList","loaded","setLoaded","key","loadGpsDataFromLocalStorage","Storage","data","JSON","parse","window","localStorage","getItem","undefined","a","localTodos","loadData","setItem","stringify","length","todosCopy","push","App","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f127a926.chunk.js","sourcesContent":["const Header = ({text}) => {\n    return (\n        <>\n        <h1 className=\"app-header\">{text}</h1>\n       </>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport { faCheckCircle, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Todo.css';\n\nexport default function Todo({ id, text, complete, todos, setTodos }) {\n    function deleteHandler() {\n        const remainingTodos = todos.filter(todo => todo.id !== id);\n        setTodos(remainingTodos);\n    }\n\n    function setComplete() {\n        const updatedTodos = todos.map(task => {\n            if (id === task.id) {\n                return { ...task, complete: !task.complete }\n            }\n            return task;\n        });\n        setTodos(updatedTodos);\n    }\n    return (\n        <div>\n            <li className=\"todo-li\">\n                <span onClick={setComplete} id=\"todo-text\" className={`todo-text ${complete ? \"todo-text__complete\" : \"\"}`}>{text}</span>\n                <span id=\"todo-icons\" className=\"todo-icons\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"todo-complete\" onClick={setComplete} />\n                    <FontAwesomeIcon icon={faTrash} className=\"todo-delete\" onClick={deleteHandler} />\n                </span>\n            </li>\n        </div>\n    );\n}","import React from 'react';\nimport Todo from './Todo';\n\nclass Todos extends React.Component {\n    render() {\n        const todos = this.props.todos;\n        return (\n            <>\n            <ul style={{listStyle: \"none\", padding: 0, width: \"100%\"}}>\n                {todos && todos.map((todo) => {\n                    return <Todo key={todo.id} todos={todos} text={todo.text} id={todo.id} complete={todo.complete} remove={this.removeTodo} setTodos={this.props.setTodos} />\n                })}\n            </ul>\n            </>\n        )\n    }\n};\n\nexport default Todos;","import React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid'\n\nconst GpsInfo = (props) => {\n    const [position, setPosition] = useState(null);\n    const [error, setError] = useState(null);\n\n    function handleError(err) {\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n        setError(err.message);\n    }\n\n    function handleSuccess(pos) {\n        console.log(pos);\n        setPosition(pos.coords);\n    }\n\n    useEffect(() => {\n        const options = {\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge: 0\n          };\n        navigator.geolocation.watchPosition(handleSuccess, handleError, options);\n        console.log(props);\n    }, [props])\n\n    const addPoint = (e) => {\n        console.log(\"addPoint()\");\n        props.add(\n            {\n                id: nanoid(),\n                text: \"Lat: \" + position.latitude + \", Long: \" + position.longitude,\n                complete: false,\n            }\n        )\n    }\n    \n\n    const renderGpsInfo = () => {\n        if (position) {\n            return <div id=\"gpsInfo\" onClick={addPoint.bind(this)}>\n                Lat: {position.latitude}, Long: {position.longitude}\n                </div>\n        } else if (error) {\n            return <div>{error}</div>\n        } else {\n            return <div>Loading ...</div>\n        }\n    }\n\n    return (\n        <>\n        {renderGpsInfo()}\n       </>\n    )\n}\n\nexport default GpsInfo;","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Todos from './Todos';\nimport GpsInfo from './GpsInfo';\n\nconst TodoList = () => {\n  const [loaded, setLoaded] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const key = \"gps-data\";\n\n  useEffect(() => {\n    const loadGpsDataFromLocalStorage = () => {\n      if (typeof Storage !== \"undefined\") {\n        const data = JSON.parse(window.localStorage.getItem(key));\n        if (data && data.todos !== undefined) {\n          return data.todos;\n        }\n        return null;\n      }\n    };\n\n    async function loadData() {\n      const localTodos = loadGpsDataFromLocalStorage();\n\n      if ((localTodos !== null)) {\n        setTodos(localTodos);\n      } else {\n        setTodos([]);\n      }\n    }\n    loadData();\n    setLoaded(true);\n  }, []);\n\n  useEffect(() => {\n    const saveGpsDataToLocalStorage = () => {\n      if (typeof Storage !== \"undefined\") {\n        window.localStorage.setItem(key, JSON.stringify({ todos: todos }));\n      }\n    };\n\n    if (loaded) {\n      saveGpsDataToLocalStorage();\n    }\n  }, [loaded, todos]);\n\n  const addTodo = (todo) => {\n    // Limit the number of todos to 50\n    if ((todos !== null) && (todos.length > 49)) {\n      return;\n    }\n    const todosCopy = [...todos];\n    todosCopy.push(todo);\n    setTodos(todosCopy);\n  }\n\n  const renderTodos = () => {\n    if (todos && loaded) {\n      return <Todos todos={todos} setTodos={setTodos} />\n    } else if (!loaded) {\n      return <h2>Loading...</h2>\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <>\n      <Header text=\"GPS Points\" />\n      <GpsInfo add={addTodo} />\n      {renderTodos()}\n    </>\n  );\n}\n\nexport default TodoList;","import React from 'react';\nimport TodoList from './components/TodoList';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <main className=\"App\">\n      <TodoList />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}